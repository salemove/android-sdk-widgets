apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-parcelize'

//Detailed information about advantages of Java toolchain https://developer.android.com/build/jdks#toolchain
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(libs.versions.javaVersion.get().toInteger())
  }
}

android {
  compileSdk 35
  namespace 'com.glia.widgets'
  defaultConfig {
    minSdkVersion 24
    versionCode widgetsVersionCode
    versionName widgetsVersionName
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    configureEach {
      buildConfigField("String", "GLIA_CORE_SDK_VERSION", "\"$gliaSdkVersion\"")
      buildConfigField("String", "GLIA_WIDGETS_SDK_VERSION", "\"$defaultConfig.versionName\"")
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    snapshot {
      // Build type used for snapshot testing.
      apply plugin: 'app.cash.paparazzi'
    }
  }

  lint {
    disable 'WrongLayoutName',
      'LayoutFileNameMatchesClass',
      'MatchingViewId',
      'RawDimen',
      'WrongAnnotationOrder',
      'ColorCasing',
      'WrongViewIdFormat',
      'HardcodedText'
  }

  buildFeatures {
    viewBinding true
    buildConfig true
  }

  packagingOptions {
    //After adding `Mockk` dependency to the instrumentation tests it started to fail builds with message that
    // there are 6 files in project with these two Licences. Since all of them were related to Junit, it is safe to merge them.
    merges += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md']
  }

  testOptions {
    unitTests {
      includeAndroidResources true
      unitTests.all {
        jvmArgs '-Xmx4g'
      }
    }
  }
  sourceSets {
    // Exclude the default test directory ("src/test/java") for all build types.
    // It is necessary to exclude unit tests from snapshot tests.
    test.java.srcDirs = []

    // Add the default test directory for debug and release build types.
    testDebug.java.srcDirs += ['src/test/java']
    testRelease.java.srcDirs += ['src/test/java']

    // Add resource directory for snapshot testing.
    snapshot.res.srcDirs += ['src/testSnapshot/res']
  }
}

tasks.register('publishSnapshotPublicationToMavenLocal', GradleBuild) {
  description = 'Publishes the Snapshot publication to Maven Local with -SNAPSHOT suffix'
  group = 'publishing'

  tasks = ['publishMavenPublicationToMavenLocal']
  startParameter.projectProperties = ['snapshot': 'yes']
}

//The snapshot will be automatically available in the Central Portal snapshot repository directly after the task finished.
tasks.register('publishSnapshotPublicationToMavenCentralRepository', GradleBuild) {
  description = 'Publishes the Snapshot publication to Maven Local with -SNAPSHOT suffix'
  group = 'publishing'

  tasks = ['publishMavenPublicationToMavenCentralRepository']
  startParameter.projectProperties = ['snapshot': 'yes']
}

//For this task we need android core sdk to be set up for releasing to maven local repository.
tasks.register("publishCoreSdkToLocalMaven") {
  if (gliaCoreSdkUseDirect) {
    dependsOn gradle.includedBuild("gliaCore").task(":androidSdk:publishSnapshotPublicationToMavenLocal")
  } else {
    println("Cannot publish Core SDK to local maven repository!")
    println("Core SDK is not configured to be used directly.")
  }
}

apply from: "${rootProject.projectDir}/scripts/direct-core.gradle"

dependencies {
  implementation libs.java.appcompat
  implementation libs.java.material
  implementation libs.java.constraintlayout
  implementation libs.lifecycle.process
  implementation libs.media.coil.core
  implementation libs.media.coil.network

  // Used for audio and video permissions by CallActivity
  implementation libs.java.rxandroid
  implementation libs.java.rxjava

  releaseApi "com.glia:android-sdk:$gliaSdkVersion"
  debugApi "com.glia:android-sdk:${coreSdkDebugVersion(gliaSdkVersion)}"

  // includeBuild doesn't work with custom build types, use local maven version instead
  snapshotApi "com.glia:android-sdk:${coreSdkSnapshotVersion(gliaSdkVersion)}"

  implementation libs.media.audioswitch
  implementation libs.media.lottie
  implementation libs.data.gson
  implementation libs.java.core.ktx
  implementation libs.media.exif.interface

  implementation platform(libs.firebase.bom)
  implementation libs.firebase.messaging

  testImplementation libs.test.junit
  testImplementation libs.test.mockito.kotlin
  testImplementation libs.test.core.testing
  testImplementation libs.test.robolectric
  testImplementation libs.test.mockk.android
  androidTestImplementation libs.test.mockk.android
  androidTestImplementation libs.test.ext.junit
  androidTestImplementation libs.test.espresso.core
  androidTestImplementation libs.test.rules

  // Test dependencies to Android native libraries
  // To prevent unit tests firing errors like 'Method length in org.json.JSONObject not mocked'
  testImplementation libs.test.json

  lintChecks project(':lint_checker')
  debugImplementation libs.debug.leakcanary
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"
