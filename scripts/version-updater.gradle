/**
 * This build script is responsible for reading and updating the project related versions for integration with CI/CD flows
 */

ext {
    gradlePropertiesFilePath = "${rootProject.projectDir}/version.properties"
    gliaCoreSdkVersionTagInProperties = 'dependency.coreSdk.version'
    gliaCoreSdkVersionTag = 'gliaSdkVersion'
}

exposeGradlePropertiesToBuildScripts()

def exposeGradlePropertiesToBuildScripts() {
    Properties gradleProperties = PropertiesIO.readProperties(gradlePropertiesFilePath)
    ext[gliaCoreSdkVersionTag] = gradleProperties.getProperty(gliaCoreSdkVersionTagInProperties)
}

/**
 * This class is responsible to reading and writing Property files
 */
class PropertiesIO {
    static Properties readProperties(String propertiesFilePath) {
        File gradlePropsFile = new File(propertiesFilePath)
        Properties gradleProperties = new Properties()
        gradleProperties.load(new FileInputStream(gradlePropsFile))
        return gradleProperties
    }

    static void saveProperties(Properties properties, String propertiesFilePath) {
        File gradlePropsFile = new File(propertiesFilePath)
        properties.store(gradlePropsFile.newWriter(), null)
    }
}

/**
 * A task class for editing the Core SDK version in version.properties
 * Example of usage from terminal:
 * ./gradlew saveCoreSdkVersion --coreSdkVersion=0.77.2
 */
class UpdateCoreSdkVersion extends DefaultTask {
    private String newCoreSdkVersion

    @Option(option = "coreSdkVersion", description = "Core SDK version that should be overriden in configuration files")
    void setCoreSdkVersion(String coreSdkVersion) {
        this.newCoreSdkVersion = coreSdkVersion
    }

    @TaskAction
    void write() {
        Properties gradleProperties = PropertiesIO.readProperties(getProject().gradlePropertiesFilePath)
        gradleProperties[getProject().gliaCoreSdkVersionTagInProperties] = newCoreSdkVersion
        PropertiesIO.saveProperties(gradleProperties, getProject().gradlePropertiesFilePath)
    }
}

tasks.register('saveCoreSdkVersion', UpdateCoreSdkVersion)
