apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'app.cash.paparazzi'

//Detailed information about advantages of Java toolchain https://developer.android.com/build/jdks#toolchain
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(libs.versions.javaVersion.get().toInteger())
  }
}

android {
  compileSdk 33
  namespace 'com.glia.widgets'
  defaultConfig {
    minSdkVersion 24
    versionCode widgetsVersionCode
    versionName widgetsVersionName
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    configureEach {
      buildConfigField("String", "GLIA_CORE_SDK_VERSION", "\"$gliaSdkVersion\"")
      buildConfigField("String", "GLIA_WIDGETS_SDK_VERSION", "\"$defaultConfig.versionName\"")
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    snapshot {
      // Build type used for snapshot testing.
    }
  }

  lint {
    disable 'WrongLayoutName',
      'LayoutFileNameMatchesClass',
      'MatchingViewId',
      'RawDimen',
      'WrongAnnotationOrder',
      'ColorCasing',
      'WrongViewIdFormat',
      'HardcodedText'
  }

  buildFeatures {
    viewBinding true
    buildConfig true
  }

  packagingOptions {
    //After adding `Mockk` dependency to the instrumentation tests it started to fail builds with message that
    // there are 6 files in project with these two Licences. Since all of them were related to Junit, it is safe to merge them.
    merges += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md']
  }

  testOptions {
    unitTests {
      includeAndroidResources true
    }
  }
  sourceSets {
    // Exclude the default test directory ("src/test/java") for all build types.
    // It is necessary to exclude unit tests from snapshot tests.
    test.java.srcDirs = []

    // Add the default test directory for debug and release build types.
    testDebug.java.srcDirs += ['src/test/java']
    testRelease.java.srcDirs += ['src/test/java']

    // Add resource directory for snapshot testing.
    snapshot.res.srcDirs += ['src/testSnapshot/res']
  }
}

tasks.register('publishToLocalMaven') {
  dependsOn ':widgetssdk:publishSnapshotPublicationToMavenLocal'
}

dependencies {
  implementation libs.java.appcompat
  implementation libs.java.material
  implementation libs.java.constraintlayout
  implementation libs.lifecycle.process
  implementation libs.media.picasso

  // Used for audio and video permissions by CallActivity
  implementation libs.java.rxandroid
  implementation libs.java.rxjava

  api "com.glia:android-sdk:$gliaSdkVersion"

  implementation libs.media.audioswitch
  implementation libs.media.lottie
  implementation libs.data.gson
  implementation libs.java.core.ktx

  testImplementation libs.test.junit
  testImplementation libs.test.mockito.kotlin
  testImplementation libs.test.core.testing
  testImplementation libs.test.robolectric
  testImplementation libs.test.mockk.android
  androidTestImplementation libs.test.mockk.android
  androidTestImplementation libs.test.ext.junit
  androidTestImplementation libs.test.espresso.core
  androidTestImplementation libs.test.rules

  // Test dependencies to Android native libraries
  // To prevent unit tests firing errors like 'Method length in org.json.JSONObject not mocked'
  testImplementation libs.test.json
  implementation libs.java.kotlin.reflect

  lintChecks project(':lint_checker')
}

ext {
  PUBLISH_GROUP_ID = 'com.glia'
  PUBLISH_VERSION = android.defaultConfig.versionName
  PUBLISH_ARTIFACT_ID = 'android-widgets'
  PUBLISH_MODULE_DESCRIPTION = 'Glia Android Widgets SDK'
  PUBLISH_ORGANISATION_NAME = 'Glia'
  PUBLISH_ORGANISATION_URL = 'https://www.glia.com/'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"
