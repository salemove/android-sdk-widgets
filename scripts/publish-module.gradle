apply plugin: 'com.vanniktech.maven.publish'

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


mavenPublishing {
  def isSnapshot = findProperty("snapshot")?.toString() == "yes"
  //Plugin automatically publishes snapshot to the Maven Central when the version name ends with `-SNAPSHOT`
  //To publish snapshot release simply call the publishing command with gradle property `-Psnapshot=yes`
  //for example `./gradlew androidSdk:publishMavenPublicationToMavenLocal -Psnapshot=yes`

  version = isSnapshot ? PUBLISH_VERSION + "-SNAPSHOT" : PUBLISH_VERSION
  coordinates(PUBLISH_GROUP_ID, PUBLISH_ARTIFACT_ID, version)

  pom {
    name = PUBLISH_ARTIFACT_ID
    description = PUBLISH_MODULE_DESCRIPTION
    inceptionYear = "2021"
    url = PUBLISH_ORGANISATION_URL

    licenses {
      license {
        url = 'https://raw.githubusercontent.com/salemove/android-sdk-widgets/master/LICENSE.txt'
      }
    }
    organization {
      name = PUBLISH_ORGANISATION_NAME
      url = PUBLISH_ORGANISATION_URL
    }
    developers {
      developer {
        name = 'Glia Technologies'
        url = PUBLISH_ORGANISATION_URL
      }
    }
    scm {
      url = 'https://github.com/salemove/android-sdk-widgets.git'
    }

    excludeOptionalDependencies(it)
  }
}

//Excludes the Firebase Messaging from the .aar dependencies to avoid requiring integrators to include them in their applications.
def excludeOptionalDependencies(mavenPom) {
  mavenPom.withXml {
    final pomNode = asNode()
    pomNode.dependencyManagement.dependencies.'*'.findAll() {
      it.artifactId.text() == 'firebase-bom'
    }.each() {
      it.parent().remove(it)
    }
    pomNode.dependencies.'*'.findAll() {
      it.artifactId.text() == 'firebase-messaging'
    }.each() {
      it.parent().remove(it)
    }
  }
}
